============================================================================================== 
Warning! Mixing Conda and module environments may lead to corruption of the
user environment. 
We do not recommend users mixing those two environments unless absolutely
necessary. Note that 
SURF does not provide any support for Conda environment.
For more information, please refer to our software policy page:
https://servicedesk.surf.nl/wiki/display/WIKI/Software+policy+Snellius#SoftwarepolicySnellius-UseofAnacondaandMinicondaenvironmentsonSnellius 

Remember that many packages have already been installed on the system and can
be loaded using 
the 'module load <package__name>' command. If you are uncertain if a package is
already available 
on the system, please use 'module avail' or 'module spider' to search for it.
============================================================================================== 
Already up to date.
Processing ./gaussian_splatting/submodules/simple-knn
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Building wheels for collected packages: simple-knn
  Building wheel for simple-knn (setup.py): started
  Building wheel for simple-knn (setup.py): finished with status 'done'
  Created wheel for simple-knn: filename=simple_knn-0.0.0-cp39-cp39-linux_x86_64.whl size=532391 sha256=e07d4d3063e9fa7578b19f7e5fba84233b0ff6fa9e3aff5dfb9ad04e2e918b5f
  Stored in directory: /gpfs/home6/jhuizing/.cache/pip/wheels/0d/32/78/fdb0ded76d11c6eb14d2f2cc605579da68ade6c4eef07d4150
Successfully built simple-knn
Installing collected packages: simple-knn
  Attempting uninstall: simple-knn
    Found existing installation: simple-knn 0.0.0
    Uninstalling simple-knn-0.0.0:
      Successfully uninstalled simple-knn-0.0.0
Successfully installed simple-knn-0.0.0
Processing ./gaussian_splatting/submodules/diff-gaussian-rasterization
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Building wheels for collected packages: diff-gaussian-rasterization
  Building wheel for diff-gaussian-rasterization (setup.py): started
  Building wheel for diff-gaussian-rasterization (setup.py): finished with status 'done'
  Created wheel for diff-gaussian-rasterization: filename=diff_gaussian_rasterization-0.0.0-cp39-cp39-linux_x86_64.whl size=469471 sha256=2045577f317b8d13316c794a7076dd570283fbef4709bc7eb94b8aeb8ca86623
  Stored in directory: /gpfs/home6/jhuizing/.cache/pip/wheels/67/76/2b/30f3ea632d0ad2cfe4e9b863b8fbb15a728bbcf015897e79da
Successfully built diff-gaussian-rasterization
Installing collected packages: diff-gaussian-rasterization
Successfully installed diff-gaussian-rasterization-0.0.0
Will export a UV-textured mesh as an .obj file.
Will export a ply file with the refined 3D Gaussians at the end of the training.
Changing sh_levels to match the loaded model: 4
-----Parsed parameters-----
Source path: /home/jhuizing/master-thesis-ds/colmap
   > Content: 7
Gaussian Splatting checkpoint path: /home/jhuizing/master-thesis-ds/repos/dreamgaussian/logs/
   > Content: 7
SUGAR checkpoint path: ./output/coarse/colmap/sugarcoarse_3Dgs7000_densityestim02_sdfnorm02/
Iteration to load: 7000
Output directory: ./output/coarse/colmap
SDF estimation factor: 0.2
SDF better normal factor: 0.2
Eval split: True
White background: False
---------------------------
Using device: 0
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |      0 B   |      0 B   |      0 B   |      0 B   |
|       from large pool |      0 B   |      0 B   |      0 B   |      0 B   |
|       from small pool |      0 B   |      0 B   |      0 B   |      0 B   |
|---------------------------------------------------------------------------|
| Active memory         |      0 B   |      0 B   |      0 B   |      0 B   |
|       from large pool |      0 B   |      0 B   |      0 B   |      0 B   |
|       from small pool |      0 B   |      0 B   |      0 B   |      0 B   |
|---------------------------------------------------------------------------|
| Requested memory      |      0 B   |      0 B   |      0 B   |      0 B   |
|       from large pool |      0 B   |      0 B   |      0 B   |      0 B   |
|       from small pool |      0 B   |      0 B   |      0 B   |      0 B   |
|---------------------------------------------------------------------------|
| GPU reserved memory   |      0 B   |      0 B   |      0 B   |      0 B   |
|       from large pool |      0 B   |      0 B   |      0 B   |      0 B   |
|       from small pool |      0 B   |      0 B   |      0 B   |      0 B   |
|---------------------------------------------------------------------------|
| Non-releasable memory |      0 B   |      0 B   |      0 B   |      0 B   |
|       from large pool |      0 B   |      0 B   |      0 B   |      0 B   |
|       from small pool |      0 B   |      0 B   |      0 B   |      0 B   |
|---------------------------------------------------------------------------|
| Allocations           |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Active allocs         |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| GPU reserved segments |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|


Loading config /home/jhuizing/master-thesis-ds/repos/dreamgaussian/logs/...
Performing train/eval split...
Traceback (most recent call last):
  File "/gpfs/home6/jhuizing/master-thesis-ds/repos/SuGaR/train.py", line 129, in <module>
    coarse_sugar_path = coarse_training_with_density_regularization(coarse_args)
  File "/gpfs/home6/jhuizing/master-thesis-ds/repos/SuGaR/sugar_trainers/coarse_density.py", line 289, in coarse_training_with_density_regularization
    nerfmodel = GaussianSplattingWrapper(
  File "/gpfs/home6/jhuizing/master-thesis-ds/repos/SuGaR/sugar_scene/gs_model.py", line 125, in __init__
    cam_list = load_gs_cameras(
  File "/gpfs/home6/jhuizing/master-thesis-ds/repos/SuGaR/sugar_scene/cameras.py", line 34, in load_gs_cameras
    with open(gs_output_path + 'cameras.json') as f:
FileNotFoundError: [Errno 2] No such file or directory: '/home/jhuizing/master-thesis-ds/repos/dreamgaussian/logs/cameras.json'

JOB STATISTICS
==============
Job ID: 6105409
Cluster: snellius
User/Group: jhuizing/jhuizing
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 18
CPU Utilized: 00:03:08
CPU Efficiency: 7.85% of 00:39:54 core-walltime
Job Wall-clock time: 00:02:13
Memory Utilized: 2.58 GB
Memory Efficiency: 2.15% of 120.00 GB
